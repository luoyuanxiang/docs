import{_ as a,c as t,o as e,a7 as E}from"./chunks/framework.CdooE4P4.js";const _="/docs/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%B8%88/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E5%BE%AA%E7%8E%AF%E5%86%97%E4%BD%99%E6%A0%A1%E9%AA%8C%E7%A0%81.png",p=JSON.parse('{"title":"校验码","description":"","frontmatter":{"title":"校验码","date":"2024-08-16 14:15"},"headers":[],"relativePath":"系统架构师/01-计算机基础/01-计算机体系结构/04-校验码.md","filePath":"系统架构师/01-计算机基础/01-计算机体系结构/04-校验码.md","lastUpdated":1724246094000}'),o={name:"系统架构师/01-计算机基础/01-计算机体系结构/04-校验码.md"},r=E('<h1 id="校验码" tabindex="-1">校验码 <a class="header-anchor" href="#校验码" aria-label="Permalink to &quot;校验码&quot;">​</a></h1><h2 id="循环冗余校验码" tabindex="-1">循环冗余校验码 <a class="header-anchor" href="#循环冗余校验码" aria-label="Permalink to &quot;循环冗余校验码&quot;">​</a></h2><p>计算机系统运行时，为了确保数据在传送过程中正确无误，一是提高硬件电路的可靠性；二是提高代码的校验能力，包括查错和纠错。通常使用校验码的方法来检测传送的数据是否出错。 <img src="'+_+'" alt=""></p>',3),s=[r];function c(n,i,d,A,l,B){return e(),t("div",null,s)}const m=a(o,[["render",c]]);export{p as __pageData,m as default};
